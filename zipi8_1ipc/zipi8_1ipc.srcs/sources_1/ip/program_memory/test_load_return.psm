Start:
LOAD s0, 12
LOAD s1, 34
SUB  s2, s2
JUMP Z, try_z_jmp
LOAD s0, C4
LOAD s0, C5
LOAD s0, C6
LOAD s0, C7
try_z_jmp:

LOAD s5, 11
CALL myfunc
SUB  s0, s0
JUMP Z, start_point
LOAD s1, 11
LOAD s2, 22
LOAD s3, 33
LOAD s4, 44
ADD  s4, 01
ADD  s1, s2
LOAD s2, 22
LOAD s3, 33
XOR  s0, s0	
XOR  s1, s1	
XOR  s2, s2	
XOR  s3, s3	

JUMP Z, start_point
LOAD s0, DD

start_point:
LOAD s0, FF
JUMP second_jump
LOAD s0, A0
LOAD s1, A1
LOAD s2, A2
LOAD s3, A3

second_jump:
SUB s0,s0
CALL myfunc
SUB s0,s0
JUMP NZ, test_NZ
LOAD s0, EE
LOAD s1, 11
LOAD s2, 22
LOAD s3, 33

test_NZ:
LOAD s4, 44
ADD  s4, 01
ADD  s1, s2
ADD  s3, s4	; If the source of second is the same as destination of prvious instruction
JUMP undoncitional_target
LOAD s0, D0
LOAD s1, D1
LOAD s2, D2
LOAD s3, D3

undoncitional_target:
LOAD s0, D7
LOAD s1, 55
LOAD s2, 66
LOAD s3, 77
JUMP Start

myfunc:
LOAD s7, 01
LOAD s7, 02
LOAD s7, 03
LOAD s7, 04
LOAD&RETURN s7, 05
LOAD s7, 02




